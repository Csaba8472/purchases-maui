// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef PURCHASESHYBRIDCOMMON_SWIFT_H
#define PURCHASESHYBRIDCOMMON_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import RevenueCat;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PurchasesHybridCommon",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;

SWIFT_CLASS_NAMED("CommonFunctionality")
@interface RCCommonFunctionality : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL simulatesAskToBuyInSandbox;)
+ (BOOL)simulatesAskToBuyInSandbox SWIFT_WARN_UNUSED_RESULT;
+ (void)setSimulatesAskToBuyInSandbox:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull appUserID;)
+ (NSString * _Nonnull)appUserID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isAnonymous;)
+ (BOOL)isAnonymous SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable proxyURLString;)
+ (NSString * _Nullable)proxyURLString SWIFT_WARN_UNUSED_RESULT;
+ (void)setProxyURLString:(NSString * _Nullable)newValue;
@property (nonatomic) BOOL simulatesAskToBuyInSandbox;
+ (void)setAllowSharingStoreAccount:(BOOL)allowSharingStoreAccount SWIFT_DEPRECATED_MSG("Use the set<NetworkId> functions instead");
+ (void)setDebugLogsEnabled:(BOOL)enabled;
+ (void)setAutomaticAppleSearchAdsAttributionCollection:(BOOL)enabled SWIFT_DEPRECATED_MSG("Use enableAdServicesAttributionTokenCollection() instead");
+ (void)enableAdServicesAttributionTokenCollection SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(maccatalyst,introduced=14.3) SWIFT_AVAILABILITY(macos,introduced=11.1) SWIFT_AVAILABILITY(ios,introduced=14.3);
+ (void)setFinishTransactions:(BOOL)finishTransactions;
+ (void)invalidateCustomerInfoCache;
+ (void)presentCodeRedemptionSheet SWIFT_AVAILABILITY(maccatalyst,unavailable) SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=14.0);
+ (BOOL)canMakePaymentsWithFeatures:(NSArray<NSNumber *> * _Nonnull)features SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RCErrorContainer;

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)logInWithAppUserID:(NSString * _Nonnull)appUserID completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)logOutWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)getCustomerInfoWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end


@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)getOfferingsWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)checkTrialOrIntroductoryPriceEligibility:(NSArray<NSString *> * _Nonnull)products completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))completion;
+ (void)getProductInfo:(NSArray<NSString *> * _Nonnull)productIds completionBlock:(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nonnull))completionBlock;
+ (void)promotionalOfferForProductIdentifier:(NSString * _Nonnull)productIdentifier discount:(NSString * _Nullable)discountIdentifier completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@class RCStoreTransaction;
@class RCCustomerInfo;

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)restorePurchasesWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)syncPurchasesWithCompletionBlock:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchaseProduct:(NSString * _Nonnull)productIdentifier signedDiscountTimestamp:(NSString * _Nullable)signedDiscountTimestamp completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchasePackage:(NSString * _Nonnull)packageIdentifier offering:(NSString * _Nonnull)offeringIdentifier signedDiscountTimestamp:(NSString * _Nullable)signedDiscountTimestamp completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)makeDeferredPurchase:(SWIFT_NOESCAPE void (^ _Nonnull)(void (^ _Nonnull)(RCStoreTransaction * _Nullable, RCCustomerInfo * _Nullable, NSError * _Nullable, BOOL)))startPurchase completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end



@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)setAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
+ (void)setEmail:(NSString * _Nullable)email;
+ (void)setPhoneNumber:(NSString * _Nullable)phoneNumber;
+ (void)setDisplayName:(NSString * _Nullable)displayName;
+ (void)setPushToken:(NSString * _Nullable)pushToken;
@end


@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)setMediaSource:(NSString * _Nullable)mediaSource;
+ (void)setCampaign:(NSString * _Nullable)campaign;
+ (void)setAdGroup:(NSString * _Nullable)adGroup;
+ (void)setAd:(NSString * _Nullable)ad;
+ (void)setKeyword:(NSString * _Nullable)keyword;
+ (void)setCreative:(NSString * _Nullable)creative;
@end


@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)collectDeviceIdentifiers;
+ (void)setAdjustID:(NSString * _Nullable)adjustID;
+ (void)setCleverTapID:(NSString * _Nullable)cleverTapID;
+ (void)setAppsflyerID:(NSString * _Nullable)appsflyerID;
+ (void)setFBAnonymousID:(NSString * _Nullable)fbAnonymousID;
+ (void)setMparticleID:(NSString * _Nullable)mParticleID;
+ (void)setMixpanelDistinctID:(NSString * _Nullable)mixpanelDistinctID;
+ (void)setFirebaseAppInstanceID:(NSString * _Nullable)firebaseAppInstanceID;
+ (void)setOnesignalID:(NSString * _Nullable)onesignalID;
+ (void)setAirshipChannelID:(NSString * _Nullable)airshipChannelID;
@end


@interface RCCustomerInfo (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end


@interface RCEntitlementInfo (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end



@interface RCEntitlementInfos (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end

@class NSError;

SWIFT_CLASS_NAMED("ErrorContainer")
@interface RCErrorContainer : NSObject
@property (nonatomic, readonly) NSInteger code;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull info;
@property (nonatomic, readonly, strong) NSError * _Nonnull error;
- (nonnull instancetype)initWithError:(NSError * _Nonnull)error extraPayload:(NSDictionary<NSString *, id> * _Nonnull)extraPayload OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface RCNonSubscriptionTransaction (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end


@interface RCOffering (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end


@interface RCOfferings (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end


@interface RCPackage (SWIFT_EXTENSION(PurchasesHybridCommon))
- (NSDictionary<NSString *, id> * _Nonnull)dictionary:(NSString * _Nonnull)offeringIdentifier SWIFT_WARN_UNUSED_RESULT;
@end


@interface RCPromotionalOffer (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rc_dictionary;
@end

@class RCDangerousSettings;

@interface RCPurchases (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID observerMode:(BOOL)observerMode userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion usesStoreKit2IfAvailable:(BOOL)usesStoreKit2IfAvailable dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings SWIFT_WARN_UNUSED_RESULT;
@end


@class RCSubscriptionPeriod;

@interface RCStoreProduct (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rc_dictionary;
+ (NSString * _Nonnull)rc_normalizedSubscriptionPeriod:(RCSubscriptionPeriod * _Nonnull)subscriptionPeriod SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)rc_normalizedSubscriptionPeriodUnit:(enum RCSubscriptionPeriodUnit)subscriptionPeriodUnit SWIFT_WARN_UNUSED_RESULT;
@end


@interface RCStoreProductDiscount (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSString * _Nullable rc_currencyCode;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rc_dictionary;
@end


@interface RCStoreTransaction (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
